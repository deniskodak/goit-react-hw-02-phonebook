{"version":3,"sources":["Filter/styled.js","Filter/Filter.js","Contact/styled.js","Contact/Contact.js","ContactList/styled.js","ContactList/ContactList.js","ContactForm/styled.js","ContactForm/ContactForm.js","App.js","index.js"],"names":["Label","styled","label","Input","input","Filter","value","onFilter","type","name","autoComplete","onChange","Li","li","Button","button","Contact","contact","onDelete","id","number","onClick","Ul","ul","ContactList","contacts","map","Form","form","ContactForm","state","handleChange","e","target","setState","handleSubmit","preventDefault","props","onSubmit","this","pattern","title","required","Component","App","filter","addContact","uuidv4","i","length","toLowerCase","alert","removeContact","idToCompare","normalizedFilter","filteredContacts","includes","style","marginLeft","marginTop","marginBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05d6d324.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 30px 30px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 6px 8px;\r\n  border-radius: 7%;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border-color: #03a9f4;\r\n  }\r\n`;\r\n\r\nexport { Label, Input };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, Input } from \"./styled\";\r\n\r\nconst Filter = ({ value, onFilter }) => (\r\n  <Label>\r\n    {\" \"}\r\n    Find contacts by name\r\n    <Input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      autoComplete=\"off\"\r\n      onChange={onFilter}\r\n    />\r\n  </Label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nconst Li = styled.li`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 10px 10px;\r\n  border-radius: 4%;\r\n  width: calc(100% / 3);\r\n  font-size: 16px;\r\n\r\n  box-shadow: 4px 5px 7px #2174f396;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border-radius: 50%;\r\n  border-color: #fff;\r\n  background: transparent;\r\n  box-shadow: 2px 1px 8px 1px rgb(25 75 211 / 43%);\r\n  color: #03a9f4;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 2px 1px 8px 1px #f44336;\r\n  }\r\n`;\r\n\r\nexport { Li, Button };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Li, Button } from \"./styled\";\r\n\r\nconst Contact = ({ contact, onDelete }) => {\r\n  const { id, name, number } = contact;\r\n  return (\r\n    <Li>\r\n      {name}: {number}\r\n      <Button type=\"button\" onClick={() => onDelete(id)}>\r\n        X\r\n      </Button>\r\n    </Li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Contact;\r\n","import styled from \"styled-components\";\r\n\r\nconst Ul = styled.ul`\r\n  margin: 0;\r\n  padding: 0 30px;\r\n  list-style: none;\r\n`;\r\n\r\nexport { Ul };\r\n","import React from \"react\";\r\nimport Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Ul } from \"./styled\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <Ul>\r\n      {contacts.map((contact) => {\r\n        return (\r\n          <Contact key={contact.id} contact={contact} onDelete={onDelete} />\r\n        );\r\n      })}\r\n    </Ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  padding: 6px 8px;\r\n  border-radius: 7%;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border: 2px solid #03a9f4;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  padding: 30px 30px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #03a9f4;\r\n  border-radius: 10%;\r\n  outline: none;\r\n  color: white;\r\n  padding: 6px 10px;\r\n  border-color: #6f97a8;\r\n  transition: transform 300ms linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.25);\r\n  }\r\n\r\n  &:active {\r\n    color: #03a9f4;\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nexport { Input, Label, Form, Button };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input, Label, Form, Button } from \"./styled\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n\r\n    this.setState(() => ({\r\n      [name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.setState(() => ({\r\n      name: \"\",\r\n      number: \"\",\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            autoComplete=\"off\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Phone number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            autoComplete=\"off\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactList\";\nimport ContactForm from \"./ContactForm\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleChange = (e) => {\n    const name = e.target.name;\n\n    this.setState(() => ({\n      [name]: e.target.value,\n    }));\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(({ contacts }) => {\n      for (let i = 0; i < contacts.length; i++) {\n        if (contacts[i].name.toLowerCase() === contact.name.toLowerCase()) {\n          return alert(`${contact.name} is already in contacts`);\n        }\n      }\n\n      return {\n        contacts: [...contacts, contact],\n      };\n    });\n  };\n\n  removeContact = (idToCompare) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== idToCompare),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <>\n        <h1 style={{ marginLeft: 30, marginTop: 0, marginBottom: 0 }}>\n          Phonebook\n        </h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 style={{ marginLeft: 30, marginTop: 0, marginBottom: 0 }}>\n          Contacts\n        </h2>\n        <Filter value={filter} onFilter={this.handleChange} />\n        <ContactList\n          contacts={filteredContacts}\n          onDelete={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}